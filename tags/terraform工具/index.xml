<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terraform工具 on 2cloudlab | 企业数字化转型的催化剂</title>
    <link>https://2cloudlab.com/tags/terraform%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in terraform工具 on 2cloudlab | 企业数字化转型的催化剂</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jul 2019 12:29:40 +0600</lastBuildDate>
    
	<atom:link href="https://2cloudlab.com/tags/terraform%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何在企业中高效使用terraform</title>
      <link>https://2cloudlab.com/blog/how-to-apply-terraform-across-entire-enterprises/</link>
      <pubDate>Mon, 15 Jul 2019 12:29:40 +0600</pubDate>
      
      <guid>https://2cloudlab.com/blog/how-to-apply-terraform-across-entire-enterprises/</guid>
      <description>terraform是一个用go语言编写的跨平台、开源、只有单个运行文件的命令行程序。terraform通过解析和执行terraform configuration文件集合，最终会在短时间内生成分布式软件所运行的环境，避免了手动配置环境，减少出错的可能性。在企业里，要想高效地使用terraform来正确且快速地生成分布式软件所运行的环境，不仅需要掌握terraform知识，还需要结合工程方面的实践经验（比如版本控制，模块划分，测试）以及其它工具（比如Packer、Docker、Kubernetes）来共同实现。
这篇文章将通过以下话题来说明如何在企业中高效使用terraform：
 企业为何使用Terraform？ Terraform的运行机制 如何解决多人同时使用Terraform的问题 在企业中建立Devops团队以及Terraform规范 总结  企业为何使用Terraform？ CICD的搭建需要多方团队共同参与，除此之外还需要一些DEVOPS方法论、实践经验以及相关工具。市面上有很多可选的工具，如何选择合适的工具，就需要根据企业所研发的产品来决定。terraform是众多工具中的一款，其作用是通过执行terraform configuration脚本文件来创建服务资源（这些资源有EC2实例、RDS实例等等）并在这些资源上部署软件服务（这些软件服务有自主研发的软件服务、MYSQL服务、Redis服务等等）。企业之所以使用terraform工具的原因在于1）拥有强大而且活跃的社区支持、免费和开源。2）支持大部分云服务提供者（AWS、Azure、GCP以及其它云服务）。3）只需要一个terraform运行文件和云服务厂商的账号就能在自己的电脑上使用。4）terraform是基于描述型语言（declarative language）来定义资源的最终状态。5）terraform支持一致性部署（immutable infrastructure）,每次更新均是可重现且一致的。
在企业内部，一般是由devops工程师来使用terraform工具，编写terraform脚本，除此之外devops工程师还需要使用其它工具比如Python、Go、Bash、Packer、Git、Docker、Kubernetes来配合。除了掌握这些工具之外，还需要具备工程学方面的经验和devops方面的经验。拥有这些经验和工具是打造一条高效CICD流水线的基本条件。CICD分为2个阶段：持续集成（CI）和持续发布（CD），每个阶段都有相对应的任务清单，比如：CI阶段需要解决研发、版本控制、测试等问题，而CD阶段需要解决基础资源创建、部署、配置、监控、安全、规范、优化等问题。根据企业自身情况，每个问题都能细分出更多的小问题。这篇文章将通过以下几个方面来揭示：如何使用terraform高效、统一地解决以上问题。</description>
    </item>
    
  </channel>
</rss>